version: "2.1"
services:
  satellite:
    container_name: satellite
    image: lightstep/collector:2019-10-25_22-47-11Z
    environment:
      - COLLECTOR_SATELLITE_KEY=<LIGHTSTEP_SATELLITE_KEY>
      - COLLECTOR_ADMIN_PLAIN_PORT=8180
      - COLLECTOR_ADMIN_SECURE_PORT=8181
      - COLLECTOR_HTTP_PLAIN_PORT=8182
      - COLLECTOR_HTTP_SECURE_PORT=8183
      - COLLECTOR_GRPC_PLAIN_PORT=8184
      - COLLECTOR_GRPC_SECURE_PORT=8185
      - COLLECTOR_PLAIN_PORT=8186
      - COLLECTOR_SECURE_PORT=8187
    ports:
      - "5000:8000"
      - "5180:8180"
      - "5182:8182"
      - "5183:8183"
      - "5282:8282"
    networks:
      kong_example:

  kong-migrations:
    image: kong:1.4.3-alpine
    command: kong migrations bootstrap
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: kong
    networks:
      - kong_example
    restart: on-failure

  kong-migrations-up:
    image: kong:1.4.3-alpine
    command: kong migrations up && kong migrations finish
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: kong
    networks:
      - kong_example
    restart: on-failure

  kong:
    container_name: kong
    build:
      context: .
      dockerfile: ./kong.Dockerfile
    user: root
    depends_on:
      db:
        condition: service_healthy
      satellite:
        condition: service_started
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_LUA_PACKAGE_PATH: /plugins/kong-plugin-lightstep/?.lua;;
      KONG_LOG_LEVEL: debug
      KONG_PLUGINS: bundled,lightstep
    networks:
      - kong_example
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    volumes:
      - ./kong-plugin-lightstep:/plugins/kong-plugin-lightstep

  db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5432:5432"
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong_example
    volumes:
      - kong_data:/var/lib/postgresql/data

volumes:
  kong_data: {}

networks:
  kong_example: {}
